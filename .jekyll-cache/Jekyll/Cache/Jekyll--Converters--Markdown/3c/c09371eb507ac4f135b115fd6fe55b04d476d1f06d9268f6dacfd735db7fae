I"-<p><a href="https://leetcode.com/problems/cells-with-odd-values-in-a-matrix/">문제</a></p>

<h2 id="접근하기">접근하기</h2>

<p>두 정수 <code class="language-plaintext highlighter-rouge">m</code>과 <code class="language-plaintext highlighter-rouge">n</code>이 주어지고, 2차원 배열 <code class="language-plaintext highlighter-rouge">indices</code>가 주어진다.
두 정수 크기의 2차원 배열을 만들고, <code class="language-plaintext highlighter-rouge">indices</code>의 숫자들만큼 2차원 배열의 행과 열을 1씩 더한다.
1씩 더한 2차원 배열에서 홀수의 개수를 반환하는 문제이다.</p>

<p><br /></p>

<h2 id="내-코드">내 코드</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">oddCells</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">m</span><span class="p">,</span> <span class="nx">n</span><span class="p">,</span> <span class="nx">indices</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="nx">matrix</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Array</span><span class="p">(</span><span class="nx">m</span><span class="p">).</span><span class="nx">fill</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">map</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="k">new</span> <span class="nb">Array</span><span class="p">(</span><span class="nx">n</span><span class="p">).</span><span class="nx">fill</span><span class="p">(</span><span class="mi">0</span><span class="p">));</span>

  <span class="nx">indices</span><span class="p">.</span><span class="nx">forEach</span><span class="p">((</span><span class="nx">index</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="kd">let</span> <span class="nx">row</span> <span class="o">=</span> <span class="nx">index</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
    <span class="kd">let</span> <span class="nx">col</span> <span class="o">=</span> <span class="nx">index</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>

    <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">m</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
      <span class="nx">matrix</span><span class="p">[</span><span class="nx">i</span><span class="p">][</span><span class="nx">col</span><span class="p">]</span><span class="o">++</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">n</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
      <span class="nx">matrix</span><span class="p">[</span><span class="nx">row</span><span class="p">][</span><span class="nx">i</span><span class="p">]</span><span class="o">++</span><span class="p">;</span>
    <span class="p">}</span>
  <span class="p">});</span>

  <span class="kd">let</span> <span class="nx">count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
  <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">matrix</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">j</span> <span class="o">&lt;</span> <span class="nx">matrix</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">length</span><span class="p">;</span> <span class="nx">j</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
      <span class="k">if</span> <span class="p">(</span><span class="nx">matrix</span><span class="p">[</span><span class="nx">i</span><span class="p">][</span><span class="nx">j</span><span class="p">]</span> <span class="o">%</span> <span class="mi">2</span><span class="p">)</span> <span class="nx">count</span><span class="o">++</span><span class="p">;</span>
    <span class="p">}</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nx">count</span><span class="p">;</span>
<span class="p">};</span>
</code></pre></div></div>

<ol>
  <li>먼저 주어지는 두 정수의 크기만큼 0으로 초기화한 2차원 배열을 생성한다. (<code class="language-plaintext highlighter-rouge">matrix</code>)</li>
  <li>더할 값이 들어있는 2차원 배열 <code class="language-plaintext highlighter-rouge">indices</code>를 순회한다.</li>
  <li><code class="language-plaintext highlighter-rouge">forEach</code>를 사용해서 2차원 배열의 내부로 들어간다.</li>
  <li>그리고 <code class="language-plaintext highlighter-rouge">col</code>과 <code class="language-plaintext highlighter-rouge">row</code>를 구해서 <code class="language-plaintext highlighter-rouge">matrix</code>에 더한다.</li>
  <li>다 더한 <code class="language-plaintext highlighter-rouge">matrix</code>를 2중for문으로 순회하면서 홀수인지 판별하고, 홀수라면 카운트를 증가시켜 반환한다.</li>
</ol>
:ET