I"j<p><a href="https://leetcode.com/problems/sort-integers-by-the-number-of-1-bits/">문제</a></p>

<h2 id="접근하기">접근하기</h2>

<p>정수형 배열이 주어진다. 이 배열의 원소들의 비트 수를 구해 비트수가 많은 순서대로 정렬한다. 비트수가 동일하다면 일반 정수 오름차순으로 정렬한다.</p>

<p><br /></p>

<h2 id="내-코드">내 코드</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">sortByBits</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">arr</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="nx">countBits</span> <span class="o">=</span> <span class="p">(</span><span class="nx">num</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="kd">let</span> <span class="nx">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="kd">let</span> <span class="nx">bits</span> <span class="o">=</span> <span class="nx">num</span><span class="p">.</span><span class="nx">toString</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span>
    <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">bits</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
      <span class="k">if</span> <span class="p">(</span><span class="nx">bits</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">===</span> <span class="dl">'</span><span class="s1">1</span><span class="dl">'</span><span class="p">)</span> <span class="nx">answer</span><span class="o">++</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="nx">answer</span><span class="p">;</span>
  <span class="p">};</span>

  <span class="k">return</span> <span class="nx">arr</span><span class="p">.</span><span class="nx">sort</span><span class="p">((</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">countBits</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span> <span class="o">-</span> <span class="nx">countBits</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span> <span class="o">||</span> <span class="nx">a</span> <span class="o">-</span> <span class="nx">b</span><span class="p">);</span>
<span class="p">};</span>
</code></pre></div></div>

<ol>
  <li>정수의 비트 수를 구하기 위해, <code class="language-plaintext highlighter-rouge">countBit</code>라는 헬퍼함수를 만들었다.</li>
  <li>이 함수는 정수를 받아서 <code class="language-plaintext highlighter-rouge">toString(2)</code>으로 2진수로 변환후, for문으로 1의 개수를 파악하여 반환하는 함수이다.</li>
  <li>이제 배열의 <code class="language-plaintext highlighter-rouge">sort</code>를 이용해, 각 원소들을 <code class="language-plaintext highlighter-rouge">countBits()</code>함수에 대입시키고, 그 기준으로 정렬한다. 비트의 수가 모두 같을경우엔 일반 정수를 오름차순 정렬시켜 반환한다.</li>
</ol>
:ET