I"B<p><a href="https://leetcode.com/problems/number-of-rectangles-that-can-form-the-largest-square/">문제</a></p>

<h2 id="접근하기">접근하기</h2>

<p>2차원 배열이 주어진다. 2차원 배열의 각 요소 배열들은 직사각형을 이루는데, 각각 길이와 너비를 의미한다.</p>

<p>각 직사각형들이 정사각형으로 만들기 위해 자를 때 가장 크게 만들 수 있는 정사각형의 크기를 구하고, 이 정사각형을 만들기 위해 필요한 직사각형의 수를 반환한다.</p>

<p><br /></p>

<h2 id="내-코드">내 코드</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">countGoodRectangles</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">rectangles</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">let</span> <span class="nx">minVal</span> <span class="o">=</span> <span class="p">[];</span>
  <span class="nx">rectangles</span><span class="p">.</span><span class="nx">forEach</span><span class="p">((</span><span class="nx">el</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nx">minVal</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(...</span><span class="nx">el</span><span class="p">));</span>
  <span class="p">});</span>
  <span class="kd">let</span> <span class="nx">count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
  <span class="kd">let</span> <span class="nx">maxVal</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(...</span><span class="nx">minVal</span><span class="p">);</span>
  <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">minVal</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">minVal</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">===</span> <span class="nx">maxVal</span><span class="p">)</span> <span class="nx">count</span><span class="o">++</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nx">count</span><span class="p">;</span>
<span class="p">};</span>
</code></pre></div></div>

<ol>
  <li>정사각형이 되기 위해선 직사각형에서 가장 짧은 거리를 기준으로 잘라야 한다.</li>
  <li>2차원 배열 내부를 순회하면서 제일 작은 값을 구한다.</li>
  <li>그 중에서 가장 큰 수가 있는데, 그 큰 수가 문제의 조건에 맞는 정사각형이다.</li>
  <li>그래서 구해놨던 정사각형 크기 (기존 2차원 배열의 가장 작은 수들) 중 만들 수 있는 가장 큰 정사각형의 수가 몇 개있는지 세서 반환한다.</li>
</ol>
:ET