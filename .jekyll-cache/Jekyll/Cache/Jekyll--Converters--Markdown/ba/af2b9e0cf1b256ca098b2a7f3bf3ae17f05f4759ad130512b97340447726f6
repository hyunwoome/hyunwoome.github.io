I"<p><a href="https://leetcode.com/problems/longest-harmonious-subsequence/">문제</a></p>

<h2 id="문제설명">문제설명</h2>

<p>숫자형 배열 <code class="language-plaintext highlighter-rouge">nums</code>가 주어진다. <code class="language-plaintext highlighter-rouge">nums</code>의 서브시퀀스로 제일 큰 수와 제일 작은수의 차이가 정확하게 1차이가 나는 수의 가장 긴 서브시퀀스를 구하는 문제이다.</p>

<p><br /></p>

<h2 id="내-코드">내 코드</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">findLHS</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">nums</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">let</span> <span class="nx">obj</span> <span class="o">=</span> <span class="p">{};</span>
  <span class="k">for</span> <span class="p">(</span><span class="kd">const</span> <span class="nx">i</span> <span class="k">of</span> <span class="nx">nums</span><span class="p">)</span> <span class="nx">obj</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">=</span> <span class="nx">obj</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">+</span> <span class="mi">1</span> <span class="o">||</span> <span class="mi">1</span><span class="p">;</span>

  <span class="kd">let</span> <span class="nx">max</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
  <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="k">in</span> <span class="nx">obj</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="nx">key</span> <span class="o">=</span> <span class="nb">Number</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span>
    <span class="kd">const</span> <span class="nx">next</span> <span class="o">=</span> <span class="nx">key</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">obj</span><span class="p">[</span><span class="nx">next</span><span class="p">]</span> <span class="o">!==</span> <span class="kc">undefined</span><span class="p">)</span> <span class="p">{</span>
      <span class="nx">max</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">max</span><span class="p">,</span> <span class="nx">obj</span><span class="p">[</span><span class="nx">key</span><span class="p">]</span> <span class="o">+</span> <span class="nx">obj</span><span class="p">[</span><span class="nx">next</span><span class="p">]);</span>
    <span class="p">}</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nx">max</span><span class="p">;</span>
<span class="p">};</span>
</code></pre></div></div>

<ol>
  <li>해쉬 구조를 이용하기 위해 <code class="language-plaintext highlighter-rouge">obj</code>라는 객체를 선언하고, <code class="language-plaintext highlighter-rouge">nums</code>를 순회하며 <code class="language-plaintext highlighter-rouge">key</code>와 <code class="language-plaintext highlighter-rouge">value</code>값을 구하는데, 중복된 <code class="language-plaintext highlighter-rouge">key</code>가 있으면 <code class="language-plaintext highlighter-rouge">value</code>값을 중첩시킨다.</li>
  <li><code class="language-plaintext highlighter-rouge">for-in</code>문을 사용해서, <code class="language-plaintext highlighter-rouge">obj</code>를 순회하고, <code class="language-plaintext highlighter-rouge">i</code>는 <code class="language-plaintext highlighter-rouge">obj</code>의 <code class="language-plaintext highlighter-rouge">key</code>값이 들어간다.</li>
  <li>1씩 차이나는 수들 중 가장 긴 서브시퀀스를 찾아야 하므로, <code class="language-plaintext highlighter-rouge">next</code>라는 변수에 <code class="language-plaintext highlighter-rouge">key + 1</code>을 하여, 해당 키의 +1한 키가 있는지 확인하고, 있으면 현재 키와 <code class="language-plaintext highlighter-rouge">key + 1</code>한 키의 값들을 더한다.</li>
  <li>전체 객체를 순회하며 더하고 그 중 가장 큰 값 <code class="language-plaintext highlighter-rouge">max</code>를 구해 반환한다.</li>
</ol>
:ET