I"\<p><a href="https://leetcode.com/problems/teemo-attacking/">문제</a></p>

<h2 id="접근하기">접근하기</h2>

<p>숫자형 배열 <code class="language-plaintext highlighter-rouge">timeSeries</code>와 숫자 <code class="language-plaintext highlighter-rouge">duration</code>이 주어진다. <code class="language-plaintext highlighter-rouge">timeSeries</code>의 숫자들은 각각 <code class="language-plaintext highlighter-rouge">duration</code>만큼 지속되는데, 그 시간을 더해서 반환하고, 만약 시간이 겹친다면 <code class="language-plaintext highlighter-rouge">duration</code>은 초기화되어 다시 카운팅된다.</p>

<p><br /></p>

<h2 id="참고-코드">참고 코드</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">findPoisonedDuration</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">timeSeries</span><span class="p">,</span> <span class="nx">duration</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">let</span> <span class="nx">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
  <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">timeSeries</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">answer</span> <span class="o">+=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">timeSeries</span><span class="p">[</span><span class="nx">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">]</span> <span class="o">-</span> <span class="nx">timeSeries</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span> <span class="nx">duration</span><span class="p">);</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nx">answer</span> <span class="o">+</span> <span class="nx">duration</span><span class="p">;</span>
<span class="p">};</span>
</code></pre></div></div>

<ol>
  <li>핵심은 <code class="language-plaintext highlighter-rouge">timeSeries</code>의 숫자들 사이의 간격(차)이 더 적으면 간격을 더하고, 아니면 <code class="language-plaintext highlighter-rouge">duration</code>을 더한다.</li>
  <li><code class="language-plaintext highlighter-rouge">timeSeries</code>를 -1까지 돌고, 마지막에 <code class="language-plaintext highlighter-rouge">duration</code>을 더해주는데, 마지막은 <code class="language-plaintext highlighter-rouge">i</code>가 순회하지 않았으며 무조건 <code class="language-plaintext highlighter-rouge">duration</code>만큼 걸리기 때문이다.</li>
</ol>
:ET