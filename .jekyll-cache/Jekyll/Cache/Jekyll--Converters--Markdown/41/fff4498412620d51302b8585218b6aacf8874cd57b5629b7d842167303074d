I"7<p><a href="https://leetcode.com/problems/toeplitz-matrix/">문제</a></p>

<h2 id="접근하기">접근하기</h2>

<p>2차원 배열 <code class="language-plaintext highlighter-rouge">matrix</code>가 주어진다. 이 배열의 왼쪽 위 - 오른쪽 아래 대각선으로 같은 숫자가 모두 이어지면 <code class="language-plaintext highlighter-rouge">true</code>를, 아니면 <code class="language-plaintext highlighter-rouge">false</code>를 반환한다.</p>

<p><br /></p>

<h2 id="참고-코드">참고 코드</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">isToeplitzMatrix</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">matrix</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">r</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">r</span> <span class="o">&lt;</span> <span class="nx">matrix</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">r</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">c</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">c</span> <span class="o">&lt;</span> <span class="nx">matrix</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">length</span><span class="p">;</span> <span class="nx">c</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
      <span class="k">if</span> <span class="p">(</span><span class="nx">r</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="nx">c</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="nx">matrix</span><span class="p">[</span><span class="nx">r</span> <span class="o">-</span> <span class="mi">1</span><span class="p">][</span><span class="nx">c</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span> <span class="o">!==</span> <span class="nx">matrix</span><span class="p">[</span><span class="nx">r</span><span class="p">][</span><span class="nx">c</span><span class="p">])</span> <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
    <span class="p">}</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
<span class="p">};</span>
</code></pre></div></div>

<ol>
  <li>대각선을 하나하나 순회해서 살펴보는 방식으로 접근하려 했는데, 솔루션보고 대각선이 성립되는 조건을 알게되었다.</li>
  <li><code class="language-plaintext highlighter-rouge">matrix</code>를 2중 for문을 이용해 순회하는데, <code class="language-plaintext highlighter-rouge">r</code>은 행을, <code class="language-plaintext highlighter-rouge">c</code>는 해당 배열의 원소들, 열을 의미한다.</li>
  <li>각 행과 열은 1번 인덱스부터 순회한다. 즉, 첫 번째 테스트케이스 예시로 행의 0번 인덱스(<code class="language-plaintext highlighter-rouge">[1, 2, 3, 4]</code>)와 열의 0번 인덱스 (<code class="language-plaintext highlighter-rouge">[1][5][9]</code>)는 제외하고 순회한다.</li>
  <li>왜냐하면, 만약 <code class="language-plaintext highlighter-rouge">matrix[1][1]</code>일 때, <code class="language-plaintext highlighter-rouge">matrix[0][0]</code>을 확이하기 위함이다.</li>
  <li>그래서 <code class="language-plaintext highlighter-rouge">matrix[r - 1][c - 1] !== matrix[r][c]</code>이 조건은, 순회하는 인덱스가 <code class="language-plaintext highlighter-rouge">matrix[1][1]</code>일 때, <code class="language-plaintext highlighter-rouge">matrix[0][0]</code>와 값이 같지 않다면, 대각선에 동일한 숫자가 오지 않은 것이기 때문에 <code class="language-plaintext highlighter-rouge">false</code>를 반환하고, 다 통과하면 <code class="language-plaintext highlighter-rouge">true</code>를 반환한다.</li>
</ol>
:ET