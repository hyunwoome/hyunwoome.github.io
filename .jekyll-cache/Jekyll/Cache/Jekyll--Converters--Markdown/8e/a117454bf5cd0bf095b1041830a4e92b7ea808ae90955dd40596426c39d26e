I"~5<p><a href="https://leetcode.com/explore/learn/card/fun-with-arrays/525/inserting-items-into-an-array/3253/">문제</a></p>

<h2 id="문제-설명">문제 설명</h2>

<p>두 정수 배열 <code class="language-plaintext highlighter-rouge">nums1</code>과 <code class="language-plaintext highlighter-rouge">nums2</code>가 주어지며, 이는 <strong>오름차순</strong>으로 정렬되어 있고, 두 정수 <code class="language-plaintext highlighter-rouge">m</code>과 <code class="language-plaintext highlighter-rouge">n</code>은 <code class="language-plaintext highlighter-rouge">nums1</code>과 <code class="language-plaintext highlighter-rouge">nums2</code>에 각각 원소의 개수를 표현한다.</p>

<p><code class="language-plaintext highlighter-rouge">nums1</code>과 <code class="language-plaintext highlighter-rouge">nums2</code>를 단일 배열 <strong>오름차순</strong>정렬로 <strong>병합</strong>하라.</p>

<p>최종 정렬된 배열은 함수에 의해 반환되지 않아야 하며, 대신 배열 <code class="language-plaintext highlighter-rouge">nums1</code>내에 <strong>병합</strong>되어야 한다. 이를 충족시키기 위해 <code class="language-plaintext highlighter-rouge">nums1</code>의 길이는 <code class="language-plaintext highlighter-rouge">m + n</code>을 가지며, 여기서 처음 <code class="language-plaintext highlighter-rouge">m</code>개의 원소는 병합되어야 하는 요소를 나타내며, 마지막 <code class="language-plaintext highlighter-rouge">n</code>의 원소는 0으로 설정되며 무시해야 한다. <code class="language-plaintext highlighter-rouge">nums2</code>는 <code class="language-plaintext highlighter-rouge">n</code>의 길이를 갖는다.</p>

<p><strong>예시 1</strong></p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">입력</span><span class="p">:</span> <span class="nx">nums1</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span> <span class="nx">m</span> <span class="o">=</span> <span class="mi">3</span><span class="p">,</span> <span class="nx">nums2</span> <span class="o">=</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">],</span> <span class="nx">n</span> <span class="o">=</span> <span class="mi">3</span>
<span class="nx">출력</span><span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">]</span>
<span class="nx">설명</span><span class="p">:</span> <span class="nx">병합하려는</span> <span class="nx">배열은</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span><span class="nx">과</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">]</span><span class="nx">이다</span><span class="p">.</span>
<span class="nx">병합의</span> <span class="nx">결과는</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">]</span><span class="nx">이며</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="nx">이</span> <span class="nx">nums1로부터</span> <span class="nx">들어온</span> <span class="nx">원소이다</span><span class="p">.</span>
</code></pre></div></div>

<p><strong>예시 2</strong></p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">입력</span><span class="p">:</span> <span class="nx">nums1</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="nx">m</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="nx">nums2</span> <span class="o">=</span> <span class="p">[],</span> <span class="nx">n</span> <span class="o">=</span> <span class="mi">0</span>
<span class="nx">출력</span><span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">]</span>
<span class="nx">설명</span><span class="p">:</span> <span class="nx">병합하려는</span> <span class="nx">배열은</span> <span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="nx">과</span> <span class="p">[]</span><span class="nx">이다</span><span class="p">.</span>
<span class="nx">병합의</span> <span class="nx">결과는</span> <span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="nx">이다</span><span class="p">.</span>
</code></pre></div></div>

<p><strong>예시 3</strong></p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">입력</span><span class="p">:</span> <span class="nx">nums1</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="nx">m</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">nums2</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="nx">n</span> <span class="o">=</span> <span class="mi">1</span>
<span class="nx">출력</span><span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">]</span>
<span class="nx">설명</span><span class="p">:</span> <span class="nx">병합하려는</span> <span class="nx">배열은</span> <span class="p">[]</span><span class="nx">과</span> <span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="nx">이다</span><span class="p">.</span>
<span class="nx">병합의</span> <span class="nx">결과는</span> <span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="nx">이다</span><span class="p">.</span>
<span class="nx">m</span> <span class="o">=</span> <span class="mi">0</span><span class="nx">이므로</span> <span class="nx">nums1에는</span> <span class="nx">요소가</span> <span class="nx">없다</span><span class="p">.</span> <span class="mi">0</span><span class="nx">은</span> <span class="nx">병합</span> <span class="nx">결과가</span> <span class="nx">nums1에</span> <span class="nx">들어갈</span> <span class="nx">수</span> <span class="nx">있도록</span> <span class="nx">하기</span> <span class="nx">위해서만</span> <span class="nx">존재한다</span><span class="p">.</span>
</code></pre></div></div>

<p><strong>제한사항</strong></p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">nums1.length == m + n</code></li>
  <li><code class="language-plaintext highlighter-rouge">nums2.length == n</code></li>
  <li><code class="language-plaintext highlighter-rouge">0 &lt;= m, n &lt;= 200</code></li>
  <li><code class="language-plaintext highlighter-rouge">1 &lt;= m + n &lt;= 200</code></li>
  <li><code class="language-plaintext highlighter-rouge">-109 &lt;= nums1[i], nums2[j] &lt;= 109</code></li>
</ul>

<p><br /></p>

<h2 id="해결방법">해결방법</h2>

<p><strong>접근하기</strong></p>

<p>이 문제의 의도에 맞게 새 배열을 만들어 삽입하지 않고 기존 배열에 대해 병합해야 한다. 그렇다면 두 배열의 원소들을 <strong>비교</strong>해가며, <code class="language-plaintext highlighter-rouge">nums2</code>의 원소들을 <code class="language-plaintext highlighter-rouge">nums1</code>에 오름차순 순서에 맞게 넣어야 한다.</p>

<p><img width="783" alt="Screen Shot 2021-06-27 at 12 55 17 PM" src="https://user-images.githubusercontent.com/76833697/123532314-192d9680-d747-11eb-8906-3225083b0469.png" /></p>

<p><strong>알고리즘</strong></p>

<ol>
  <li>배열의 원소를 비교하기 위한 기법으로 <strong>투 포인터 알고리즘</strong>을 사용한다. 투 포인터 알고리즘은 <strong>1차원 배열이 있고 이 배열에서 각자 다른 원소를 가리키고 있는 2개의 포인터를 조작해가며 원하는 것을 얻는 알고리즘</strong>이다.
위 그림에서 <code class="language-plaintext highlighter-rouge">i</code>와 <code class="language-plaintext highlighter-rouge">j</code>가 포인터가 된다.</li>
  <li><code class="language-plaintext highlighter-rouge">nums1</code>에 오름차순으로 정렬해야 하므로 <code class="language-plaintext highlighter-rouge">nums1[i]</code>와 <code class="language-plaintext highlighter-rouge">nums2[j]</code>를 비교해 <code class="language-plaintext highlighter-rouge">nums1</code>에 삽입한다. 아래 풀이코드에선, <code class="language-plaintext highlighter-rouge">nums1[i]</code>가 <code class="language-plaintext highlighter-rouge">nums2[j]</code>보다 클 때, <code class="language-plaintext highlighter-rouge">nums1[i]</code>의 앞에 위치하도록 작성되었다. 그러면 오름차순이 될 것이다. 이 조건이 성립되면 다음 인덱스를 비교하기 위해 <code class="language-plaintext highlighter-rouge">i</code>와 <code class="language-plaintext highlighter-rouge">j</code>의 인덱스 값을 증가시킨다.</li>
  <li>이 조건이 성립되지 않는다면, <code class="language-plaintext highlighter-rouge">nums[j]</code>의 값이 더 크다는 의미이므로 <code class="language-plaintext highlighter-rouge">i</code>가 가리키는 인덱스를 증가시켜 <code class="language-plaintext highlighter-rouge">nums[i]</code>의 값을 높은 값으로 변경한다.</li>
  <li>이러한 단계는 <code class="language-plaintext highlighter-rouge">nums1</code>에 병합하려는 배열, <code class="language-plaintext highlighter-rouge">nums2</code>를 다 순회할 때 까지 진행한다.</li>
</ol>

<p><br /></p>

<h2 id="풀이코드">풀이코드</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/**
 * @param {number[]} nums1
 * @param {number} m
 * @param {number[]} nums2
 * @param {number} n
 * @return {void} 아무것도 반환하지 말아야 하며, 대신 제자리 방법(in-place)으로 nums1을 수정하라.
 */</span>
<span class="kd">var</span> <span class="nx">merge</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">nums1</span><span class="p">,</span> <span class="nx">m</span><span class="p">,</span> <span class="nx">nums2</span><span class="p">,</span> <span class="nx">n</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">nums1</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span> <span class="nx">nums1</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="nx">m</span><span class="p">);</span>

  <span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
  <span class="kd">var</span> <span class="nx">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

  <span class="k">while</span> <span class="p">(</span><span class="nx">j</span> <span class="o">&lt;</span> <span class="nx">nums2</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">nums1</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">===</span> <span class="kc">undefined</span> <span class="o">||</span> <span class="nx">nums1</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">&gt;</span> <span class="nx">nums2</span><span class="p">[</span><span class="nx">j</span><span class="p">])</span> <span class="p">{</span>
      <span class="nx">nums1</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">nums2</span><span class="p">[</span><span class="nx">j</span><span class="p">]);</span>
      <span class="nx">j</span><span class="o">++</span><span class="p">;</span>
      <span class="nx">i</span><span class="o">++</span><span class="p">;</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
      <span class="nx">i</span><span class="o">++</span><span class="p">;</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">};</span>
</code></pre></div></div>

<p><strong>복잡도</strong></p>
:ET