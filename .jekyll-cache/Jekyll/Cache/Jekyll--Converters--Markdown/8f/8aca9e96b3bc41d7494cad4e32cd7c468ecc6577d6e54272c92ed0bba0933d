I"#<p><a href="https://leetcode.com/problems/queries-on-a-permutation-with-key/">문제</a></p>

<h2 id="접근하기">접근하기</h2>

<p>숫자형 배열 <code class="language-plaintext highlighter-rouge">queries</code>와 숫자 <code class="language-plaintext highlighter-rouge">m</code>이 주어진다. 숫자 <code class="language-plaintext highlighter-rouge">m</code>은 1부터 m까지의 순열을 만들어야 한다. 그리고 <code class="language-plaintext highlighter-rouge">queries</code>를 순회하면서 <code class="language-plaintext highlighter-rouge">queries[i]</code>가 <code class="language-plaintext highlighter-rouge">m</code>의 몇 번 인덱스인지 확인해서 정답 배열에 푸쉬하고, 해당 인덱스는 제거 후 <code class="language-plaintext highlighter-rouge">m</code>의 맨 앞으로 이동시킨다. 이 과정을 <code class="language-plaintext highlighter-rouge">queries</code>가 끝날 때 까지 지속하고 최종적으로 정답 배열을 반환한다.</p>

<p><br /></p>

<h2 id="내-코드">내 코드</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">processQueries</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">queries</span><span class="p">,</span> <span class="nx">m</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">let</span> <span class="nx">answer</span> <span class="o">=</span> <span class="p">[];</span>
  <span class="kd">let</span> <span class="nx">P</span> <span class="o">=</span> <span class="p">[];</span>

  <span class="c1">// Permutation</span>
  <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;=</span> <span class="nx">m</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">P</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span>
  <span class="p">}</span>

  <span class="c1">// query loop</span>
  <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">queries</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">let</span> <span class="nx">index</span> <span class="o">=</span> <span class="nx">P</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">queries</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span> <span class="c1">// 2, 0, 1, 0</span>
    <span class="nx">answer</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">index</span><span class="p">);</span> <span class="c1">// 2</span>
    <span class="nx">P</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="nb">Number</span><span class="p">(</span><span class="nx">P</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">index</span><span class="p">,</span> <span class="mi">1</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="dl">''</span><span class="p">)));</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nx">answer</span><span class="p">;</span>
<span class="p">};</span>
</code></pre></div></div>

<ol>
  <li>먼저 순열을 만들기 위해 1부터 <code class="language-plaintext highlighter-rouge">m</code>까지 담을 수 있는 배열 <code class="language-plaintext highlighter-rouge">P</code>를 만든다.</li>
  <li><code class="language-plaintext highlighter-rouge">queries</code>를 순회하면서 <code class="language-plaintext highlighter-rouge">queries[i]</code>가 <code class="language-plaintext highlighter-rouge">P</code>의 몇 번 인덱스인지 확인해서 <code class="language-plaintext highlighter-rouge">index</code>에 담는다.</li>
  <li>해당 <code class="language-plaintext highlighter-rouge">index</code>는 <code class="language-plaintext highlighter-rouge">answer</code>배열에 담고, 해당 <code class="language-plaintext highlighter-rouge">P</code>의 <code class="language-plaintext highlighter-rouge">index</code> 요소를 <code class="language-plaintext highlighter-rouge">splice</code>로 제거 후 다시 <code class="language-plaintext highlighter-rouge">P</code>에 <code class="language-plaintext highlighter-rouge">unshift</code>하여 맨 앞으로 이동시켜 준다.</li>
  <li><code class="language-plaintext highlighter-rouge">(Number(P.splice(index, 1).join('')));</code>이 부분은 <code class="language-plaintext highlighter-rouge">splice</code>를 하면 잘린 원소가 배열로 반환되므로 <code class="language-plaintext highlighter-rouge">join</code>으로 문자열로 만든 후 <code class="language-plaintext highlighter-rouge">Number</code>로 다시 숫자형으로 전환하여 <code class="language-plaintext highlighter-rouge">P</code> 배열에 <code class="language-plaintext highlighter-rouge">unshift</code>하는 것이다.</li>
</ol>
:ET