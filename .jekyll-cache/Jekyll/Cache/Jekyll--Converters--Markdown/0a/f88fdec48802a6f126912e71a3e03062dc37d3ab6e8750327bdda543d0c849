I"<p><a href="https://leetcode.com/problems/groups-of-special-equivalent-strings/">문제</a></p>

<h2 id="문제-설명">문제 설명</h2>

<p>문자열 배열 words가 주어진다.
words의 문자열들을 짝수 인덱스는 짝수 인덱스끼리 스왑을, 홀수 인덱스는 홀수 인덱스끼리 스왑하여, 두 문자열이 같다면 <code class="language-plaintext highlighter-rouge">special-equivalent</code>라 하며,
<code class="language-plaintext highlighter-rouge">special-equivalent</code>인 문자열들을 묶어 몇 개의 그룹이 될 수 있는지 반환하는 문제이다.</p>

<p><br /></p>

<h2 id="참고-코드">참고 코드</h2>

<ul>
  <li><strong>Runtime</strong>: 80 ms, faster than 98.65%</li>
  <li><strong>Memory Usage</strong>: 44.9 MB, less than 50.00%</li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">numSpecialEquivGroups</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">A</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="nx">groupSet</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Set</span><span class="p">();</span>
  <span class="nx">A</span><span class="p">.</span><span class="nx">forEach</span><span class="p">((</span><span class="nx">a</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">groupSet</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">transform</span><span class="p">(</span><span class="nx">a</span><span class="p">)));</span>
  <span class="k">return</span> <span class="nx">groupSet</span><span class="p">.</span><span class="nx">size</span><span class="p">;</span>
<span class="p">};</span>

<span class="kd">const</span> <span class="nx">transform</span> <span class="o">=</span> <span class="p">(</span><span class="nx">S</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="nx">even</span> <span class="o">=</span> <span class="nx">S</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="dl">''</span><span class="p">).</span><span class="nx">filter</span><span class="p">((</span><span class="nx">_</span><span class="p">,</span> <span class="nx">i</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">i</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">===</span> <span class="mi">0</span><span class="p">);</span>
  <span class="kd">const</span> <span class="nx">odd</span> <span class="o">=</span> <span class="nx">S</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="dl">''</span><span class="p">).</span><span class="nx">filter</span><span class="p">((</span><span class="nx">_</span><span class="p">,</span> <span class="nx">i</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">i</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">===</span> <span class="mi">1</span><span class="p">);</span>
  <span class="nx">even</span><span class="p">.</span><span class="nx">sort</span><span class="p">();</span>
  <span class="nx">odd</span><span class="p">.</span><span class="nx">sort</span><span class="p">();</span>
  <span class="k">return</span> <span class="s2">`</span><span class="p">${</span><span class="nx">even</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="dl">''</span><span class="p">)}${</span><span class="nx">odd</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="dl">''</span><span class="p">)}</span><span class="s2">`</span><span class="p">;</span>
<span class="p">};</span>
</code></pre></div></div>

<ol>
  <li>처음 문제에 접근할 때, <code class="language-plaintext highlighter-rouge">Array.forEach</code>를 사용해서 각 문자열에 접근하고 짝수 인덱스끼리 스왑, 홀수 인덱스끼리 스왑을 해서 배열에 있는 다른 문자열과 비교해서 개수를 파악하려고 했다. 그러나 스왑을 해야 한다는 부분에서 어떻게 로직을 작성해야 할지 고민해봐도 쉽게 떠오르지 않아 코드를 참고하였다.</li>
  <li>위 코드에선 신박한 방법으로 구분했다. 먼저 <code class="language-plaintext highlighter-rouge">transform</code>이라는 사용자 정의 함수를 작성했다. 이 함수가 하는일을 자세히 살펴보면, 인자로 입력받는 문자열의 짝수, 홀수 인덱스를 따로 <code class="language-plaintext highlighter-rouge">even</code>, <code class="language-plaintext highlighter-rouge">odd</code>로 담아놓았다.</li>
  <li>담아놓은 문자열을 오름차순으로 정렬하고 다시 이어 붙여 반환한다. 이 방식으로 하면 여러번 스왑되어 있는 문자열을 찾을 때도 굉장히 간단하게 공통된 부분을 찾을 수 있다는 것이다.</li>
  <li>예를 들어 <code class="language-plaintext highlighter-rouge">'abcd', 'cdab', 'cbad'</code>가 있으면, <code class="language-plaintext highlighter-rouge">transform</code>함수에 인자로 받아 실행되면 <code class="language-plaintext highlighter-rouge">'acbd', 'acbd', 'acbd',</code>로 바뀌게 된다. 여기서 <code class="language-plaintext highlighter-rouge">Set</code>를 사용해 중복을 제거하면 하나의 그룹이 되는 것이다.</li>
</ol>
:ET