I".<p><a href="https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string/">문제</a></p>

<h2 id="접근하기">접근하기</h2>

<p>주어진 문자열 <code class="language-plaintext highlighter-rouge">s</code>를 순회하면서, 인접한 문자열이 중복되는 문자열이면 제거하고 나머지 문자열만 반환하는 문제다.</p>

<p><br /></p>

<h2 id="내-코드">내 코드</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">removeDuplicates</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">s</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">let</span> <span class="nx">stack</span> <span class="o">=</span> <span class="p">[];</span>
  <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">s</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">stack</span><span class="p">[</span><span class="nx">stack</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span> <span class="o">===</span> <span class="nx">s</span><span class="p">[</span><span class="nx">i</span><span class="p">])</span> <span class="p">{</span>
      <span class="nx">stack</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
      <span class="nx">stack</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">s</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span>
    <span class="p">}</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nx">stack</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="dl">''</span><span class="p">);</span>
<span class="p">};</span>
</code></pre></div></div>

<ol>
  <li>스택을 이용해서 풀 수 있다. 먼저 <code class="language-plaintext highlighter-rouge">stack</code> 배열 변수를 생성한다.</li>
  <li>주어진 문자열을 순회하면서, 만약 해당 인덱스의 문자열이 <code class="language-plaintext highlighter-rouge">stack</code>의 마지막 인덱스의 문자열과 같다면, 인접한 중복된 문자이다. 그러므로 해당 문자열을 푸쉬하지 않고 <code class="language-plaintext highlighter-rouge">stack</code>의 마지막 문자열 제거를 위해 <code class="language-plaintext highlighter-rouge">pop()</code>을 사용한다.</li>
  <li>동일하지 않다면 그냥 문자열을 푸쉬한다.</li>
</ol>
:ET