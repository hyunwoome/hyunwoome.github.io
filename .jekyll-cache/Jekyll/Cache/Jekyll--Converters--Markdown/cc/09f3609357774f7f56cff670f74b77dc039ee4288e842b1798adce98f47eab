I"f<p><a href="https://leetcode.com/problems/monotonic-array/">문제</a></p>

<h2 id="접근하기">접근하기</h2>

<p>숫자형 배열 <code class="language-plaintext highlighter-rouge">nums</code>가 주어진다. 이 <code class="language-plaintext highlighter-rouge">nums</code>의 숫자가 모두 오름차순이거나 모두 내림차순일 경우에 <code class="language-plaintext highlighter-rouge">true</code>를, 섞여 있다면 <code class="language-plaintext highlighter-rouge">false</code>를 반환한다.</p>

<p><br /></p>

<h2 id="참고-코드">참고 코드</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">isMonotonic</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">nums</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">let</span> <span class="nx">increasing</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
  <span class="kd">let</span> <span class="nx">decreasing</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
  <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">nums</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">nums</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">&gt;</span> <span class="nx">nums</span><span class="p">[</span><span class="nx">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">])</span> <span class="nx">increasing</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">nums</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">&lt;</span> <span class="nx">nums</span><span class="p">[</span><span class="nx">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">])</span> <span class="nx">decreasing</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nx">increasing</span> <span class="o">||</span> <span class="nx">decreasing</span><span class="p">;</span>
<span class="p">};</span>
</code></pre></div></div>

<ol>
  <li><code class="language-plaintext highlighter-rouge">nums</code>를 순회하며, <code class="language-plaintext highlighter-rouge">i</code>와 <code class="language-plaintext highlighter-rouge">i + 1</code>을 비교하고, 한 쪽이라도 <code class="language-plaintext highlighter-rouge">true</code>가 있을 경우엔 오름차순 또는 내림차순이므로 <code class="language-plaintext highlighter-rouge">true</code>를 반환하고, 둘다 <code class="language-plaintext highlighter-rouge">false</code>일 경우 섞여있는 경우이므로 <code class="language-plaintext highlighter-rouge">false</code>를 반환한다.</li>
</ol>
:ET