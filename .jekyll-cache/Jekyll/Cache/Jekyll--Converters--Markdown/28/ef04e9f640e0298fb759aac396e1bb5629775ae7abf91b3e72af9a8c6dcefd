I"7<p><a href="https://leetcode.com/problems/contains-duplicate/">문제</a></p>

<h2 id="접근하기">접근하기</h2>

<p>숫자형 배열 <code class="language-plaintext highlighter-rouge">nums</code>가 주어진다. 이 배열에서 적어도 두 번이상 반복되는 숫자가 있다면 <code class="language-plaintext highlighter-rouge">true</code>를, 중복된 숫자가 없다면 <code class="language-plaintext highlighter-rouge">false</code>를 반환한다.</p>

<p><br /></p>

<h2 id="내-코드">내 코드</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">containsDuplicate</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">nums</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">let</span> <span class="nx">obj</span> <span class="o">=</span> <span class="p">{};</span>
  <span class="k">for</span> <span class="p">(</span><span class="kd">const</span> <span class="nx">num</span> <span class="k">of</span> <span class="nx">nums</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">obj</span><span class="p">[</span><span class="nx">num</span><span class="p">]</span> <span class="o">=</span> <span class="nx">obj</span><span class="p">[</span><span class="nx">num</span><span class="p">]</span> <span class="p">?</span> <span class="p">(</span><span class="nx">obj</span><span class="p">[</span><span class="nx">num</span><span class="p">]</span> <span class="o">+=</span> <span class="mi">1</span><span class="p">)</span> <span class="p">:</span> <span class="mi">1</span><span class="p">;</span>
  <span class="p">}</span>

  <span class="k">for</span> <span class="p">(</span><span class="kd">const</span> <span class="p">[</span><span class="nx">key</span><span class="p">,</span> <span class="nx">value</span><span class="p">]</span> <span class="k">of</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">entries</span><span class="p">(</span><span class="nx">obj</span><span class="p">))</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">value</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">)</span> <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
<span class="p">};</span>
</code></pre></div></div>

<ol>
  <li>hash를 사용했다.</li>
  <li><code class="language-plaintext highlighter-rouge">nums</code>를 순회하면서, 처음나오면 숫자엔 1을, 동일한 숫자가 나올 때 마다 1을 더해 키와 값으로 나타냈다.</li>
</ol>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// nums = [1, 2, 3, 1]</span>
<span class="kd">let</span> <span class="nx">obj</span> <span class="o">=</span> <span class="p">{};</span>
<span class="k">for</span> <span class="p">(</span><span class="kd">const</span> <span class="nx">num</span> <span class="k">of</span> <span class="nx">nums</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">obj</span><span class="p">[</span><span class="nx">num</span><span class="p">]</span> <span class="o">=</span> <span class="nx">obj</span><span class="p">[</span><span class="nx">num</span><span class="p">]</span> <span class="p">?</span> <span class="p">(</span><span class="nx">obj</span><span class="p">[</span><span class="nx">num</span><span class="p">]</span> <span class="o">+=</span> <span class="mi">1</span><span class="p">)</span> <span class="p">:</span> <span class="mi">1</span><span class="p">;</span>
<span class="p">}</span>
<span class="c1">// { '1': 2, '2': 1, '3': 1 }</span>
</code></pre></div></div>

<ol>
  <li>객체를 순회하면서, <code class="language-plaintext highlighter-rouge">value</code>값이 1이 넘어가는 수가 있다면 <code class="language-plaintext highlighter-rouge">true</code>를, 아니면 <code class="language-plaintext highlighter-rouge">false</code>를 반환하도록 했다.</li>
</ol>

<h2 id="참고-코드">참고 코드</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">containsDuplicate</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">nums</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">let</span> <span class="kd">set</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Set</span><span class="p">(</span><span class="nx">nums</span><span class="p">);</span>
  <span class="k">return</span> <span class="kd">set</span><span class="p">.</span><span class="nx">size</span> <span class="o">&lt;</span> <span class="nx">nums</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span>
<span class="p">};</span>
</code></pre></div></div>

<ol>
  <li><code class="language-plaintext highlighter-rouge">Set</code>을 이용해 중복된 숫자를 제거후 기존 배열과 비교했다.</li>
  <li>속도는 <strong>2중for문 &lt; 해시 &lt; Set</strong> 순으로 중복을 제거한 방법이 가장 빨랏다.</li>
</ol>
:ET