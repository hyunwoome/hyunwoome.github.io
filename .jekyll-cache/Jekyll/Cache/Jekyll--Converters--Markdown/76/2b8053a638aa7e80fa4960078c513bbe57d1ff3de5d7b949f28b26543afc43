I"z<p><a href="https://leetcode.com/problems/longer-contiguous-segments-of-ones-than-zeros/">문제</a></p>

<h2 id="접근하기">접근하기</h2>

<p>문자열 <code class="language-plaintext highlighter-rouge">s</code>가 주어지며, <code class="language-plaintext highlighter-rouge">s</code>는 0과 1로 구성된다. 0과 1중에서 1이 가장 길게 연결되어 있다면 <code class="language-plaintext highlighter-rouge">true</code>를 반환하며 아니라면 <code class="language-plaintext highlighter-rouge">false</code>를 반환한다.</p>

<p><br /></p>

<h2 id="참고-코드">참고 코드</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">checkZeroOnes</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">s</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">let</span> <span class="nx">longest1</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
  <span class="kd">let</span> <span class="nx">longest0</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

  <span class="kd">let</span> <span class="nx">count1</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
  <span class="kd">let</span> <span class="nx">count0</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

  <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">s</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">s</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">===</span> <span class="dl">'</span><span class="s1">1</span><span class="dl">'</span><span class="p">)</span> <span class="nx">count1</span><span class="o">++</span><span class="p">;</span>
    <span class="k">else</span> <span class="nx">count1</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

    <span class="k">if</span> <span class="p">(</span><span class="nx">s</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">===</span> <span class="dl">'</span><span class="s1">0</span><span class="dl">'</span><span class="p">)</span> <span class="nx">count0</span><span class="o">++</span><span class="p">;</span>
    <span class="k">else</span> <span class="nx">count0</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

    <span class="nx">longest1</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">longest1</span><span class="p">,</span> <span class="nx">count1</span><span class="p">);</span>
    <span class="nx">longest0</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">longest0</span><span class="p">,</span> <span class="nx">count0</span><span class="p">);</span>
  <span class="p">}</span>

  <span class="k">return</span> <span class="nx">longest1</span> <span class="o">&gt;</span> <span class="nx">longest0</span><span class="p">;</span>
<span class="p">};</span>
</code></pre></div></div>

<ol>
  <li>투포인터 방식도 가능하지만 이 방법이 속도가 더 빠르고 간결했다.</li>
  <li><code class="language-plaintext highlighter-rouge">s</code>를 순회하면서, 두 번의 <code class="language-plaintext highlighter-rouge">if</code>문을 실행하는데, <code class="language-plaintext highlighter-rouge">s[i]</code>가 1일 땐 <code class="language-plaintext highlighter-rouge">count1</code>을 증가시키고, <code class="language-plaintext highlighter-rouge">count0</code>은 0으로 초기화한다. 0으로 초기화하는 이유는 연속된 수가 중간에 끊기고 다시 연결될 수 있는 경우가 있기 때문이다. 이 경우엔 최종적으로 가장 길게 연결된 카운트를 반환한다.</li>
</ol>
:ET