I"z.<p><a href="https://leetcode.com/problems/rank-transform-of-an-array/">문제</a></p>

<h2 id="접근하기">접근하기</h2>

<p>숫자형 배열 <code class="language-plaintext highlighter-rouge">arr</code>가 주어진다. <code class="language-plaintext highlighter-rouge">arr</code>의 숫자들을 순위를 매기려한다. 작은 숫자부터 1로 시작한다. <code class="language-plaintext highlighter-rouge">arr</code>에서 동일한 숫자가 있을 경우 동일한 순위를 매긴다.</p>

<p><br /></p>

<h2 id="내-코드-시간초과">내 코드 (시간초과)</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">arrayRankTransform</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">arr</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">let</span> <span class="nx">sorting</span> <span class="o">=</span> <span class="p">[...</span><span class="nx">arr</span><span class="p">];</span>
  <span class="nx">sorting</span><span class="p">.</span><span class="nx">sort</span><span class="p">((</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">a</span> <span class="o">-</span> <span class="nx">b</span><span class="p">);</span>
  <span class="kd">const</span> <span class="kd">set</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Set</span><span class="p">(</span><span class="nx">sorting</span><span class="p">);</span>
  <span class="kd">const</span> <span class="nx">newArr</span> <span class="o">=</span> <span class="nb">Array</span><span class="p">.</span><span class="k">from</span><span class="p">(</span><span class="kd">set</span><span class="p">);</span>
  <span class="kd">let</span> <span class="nx">obj</span> <span class="o">=</span> <span class="p">{};</span>
  <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">newArr</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">obj</span><span class="p">[</span><span class="nx">newArr</span><span class="p">[</span><span class="nx">i</span><span class="p">]]</span> <span class="o">=</span> <span class="nx">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="kd">const</span> <span class="nx">answer</span> <span class="o">=</span> <span class="p">[];</span>
  <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">arr</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">for</span> <span class="p">(</span><span class="kd">const</span> <span class="p">[</span><span class="nx">key</span><span class="p">,</span> <span class="nx">value</span><span class="p">]</span> <span class="k">of</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">entries</span><span class="p">(</span><span class="nx">obj</span><span class="p">))</span> <span class="p">{</span>
      <span class="k">if</span> <span class="p">(</span><span class="nb">String</span><span class="p">(</span><span class="nx">arr</span><span class="p">[</span><span class="nx">i</span><span class="p">])</span> <span class="o">===</span> <span class="nx">key</span><span class="p">)</span> <span class="nx">answer</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">value</span><span class="p">);</span>
    <span class="p">}</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nx">answer</span><span class="p">;</span>
<span class="p">};</span>
</code></pre></div></div>

<ol>
  <li>객체를 사용해서 구현했는데, 마지막 이중for문 때문인지 시간초과가 발생한다.
배열의 길이가 10^5까지 주어지므로 이중 for문을 사용했을 때 백억까지 늘어나기 때문에 시간초과가 난 듯 싶다.</li>
</ol>

<p><br /></p>

<h2 id="참고-코드">참고 코드</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">arrayRankTransform</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">arr</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">let</span> <span class="nx">copied</span> <span class="o">=</span> <span class="nb">Array</span><span class="p">.</span><span class="k">from</span><span class="p">(</span><span class="k">new</span> <span class="nb">Set</span><span class="p">(</span><span class="nx">arr</span><span class="p">)).</span><span class="nx">sort</span><span class="p">((</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">a</span> <span class="o">-</span> <span class="nx">b</span><span class="p">);</span>
  <span class="kd">let</span> <span class="nx">arrMap</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Map</span><span class="p">();</span>
  <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">copied</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">arrMap</span><span class="p">.</span><span class="kd">set</span><span class="p">(</span><span class="nx">copied</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span> <span class="nx">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span>
  <span class="p">}</span>

  <span class="nx">arr</span> <span class="o">=</span> <span class="nx">arr</span><span class="p">.</span><span class="nx">map</span><span class="p">((</span><span class="nx">item</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">arrMap</span><span class="p">.</span><span class="kd">get</span><span class="p">(</span><span class="nx">item</span><span class="p">));</span>
  <span class="k">return</span> <span class="nx">arr</span><span class="p">;</span>
<span class="p">};</span>
</code></pre></div></div>

<ol>
  <li>첫 번째 코드는 배열의 중복을 제거하고 오름차순으로 정렬하는 모습이다.</li>
  <li>점수와 순위를 매핑하는 두 번째 코드에선 나는 객체를, 위 코드는 <code class="language-plaintext highlighter-rouge">Map</code>을 이용한 차이만 있을 뿐 동일한 것 같다.</li>
  <li>마지막 줄에서, 기존 <code class="language-plaintext highlighter-rouge">arr</code> 배열에 <code class="language-plaintext highlighter-rouge">map</code>을 이용했다. 여기서 매핑된 <code class="language-plaintext highlighter-rouge">arrMap</code>에 <code class="language-plaintext highlighter-rouge">get()</code>메서드를 사용했는데, <code class="language-plaintext highlighter-rouge">get()</code>메서드 인자로 키를 넣으면 값을 반환하는 메서드이다.</li>
  <li>맨 아래 코드를 제외하곤 거의 비슷한 것 같아, 수정 후 제출했다.</li>
</ol>

<p><br /></p>

<h2 id="수정-코드">수정 코드</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">arrayRankTransform</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">arr</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">let</span> <span class="nx">sorting</span> <span class="o">=</span> <span class="p">[...</span><span class="nx">arr</span><span class="p">];</span>
  <span class="nx">sorting</span><span class="p">.</span><span class="nx">sort</span><span class="p">((</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">a</span> <span class="o">-</span> <span class="nx">b</span><span class="p">);</span>
  <span class="kd">const</span> <span class="kd">set</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Set</span><span class="p">(</span><span class="nx">sorting</span><span class="p">);</span>
  <span class="kd">const</span> <span class="nx">newArr</span> <span class="o">=</span> <span class="nb">Array</span><span class="p">.</span><span class="k">from</span><span class="p">(</span><span class="kd">set</span><span class="p">);</span>
  <span class="kd">let</span> <span class="nx">obj</span> <span class="o">=</span> <span class="p">{};</span>
  <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">newArr</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">obj</span><span class="p">[</span><span class="nx">newArr</span><span class="p">[</span><span class="nx">i</span><span class="p">]]</span> <span class="o">=</span> <span class="nx">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="c1">// for (let i = 0; i &lt; arr.length; i++) {</span>
  <span class="c1">//   for (const [key, value] of Object.entries(obj)) {</span>
  <span class="c1">//     if (String(arr[i]) === key) answer.push(value);</span>
  <span class="c1">//   }</span>
  <span class="c1">// }</span>

  <span class="c1">// map 이용</span>
  <span class="nx">arr</span> <span class="o">=</span> <span class="nx">arr</span><span class="p">.</span><span class="nx">map</span><span class="p">((</span><span class="nx">item</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">obj</span><span class="p">[</span><span class="nx">item</span><span class="p">]);</span>

  <span class="c1">// for문 이용</span>
  <span class="c1">// let answer = [];</span>
  <span class="c1">// for (let i = 0; i &lt; arr.length; i++) {</span>
  <span class="c1">//   answer.push(obj[arr[i]]);</span>
  <span class="c1">// }</span>

  <span class="k">return</span> <span class="nx">arr</span><span class="p">;</span>
<span class="p">};</span>
</code></pre></div></div>

<ol>
  <li>주석처리한 문제가 되는 코드를 제거하고, 위 방식처럼 <code class="language-plaintext highlighter-rouge">arr</code>를 순회하면서 객체에 키로 <code class="language-plaintext highlighter-rouge">item</code>을 넣어주고 해당 값을 배열로 반환했다.</li>
  <li>고차함수<code class="language-plaintext highlighter-rouge">map</code>과 <code class="language-plaintext highlighter-rouge">for</code>문의 시간차이는 별로 나지 않았다.</li>
</ol>
:ET