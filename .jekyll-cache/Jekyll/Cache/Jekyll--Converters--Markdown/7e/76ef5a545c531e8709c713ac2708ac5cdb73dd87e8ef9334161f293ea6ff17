I"<p><a href="https://leetcode.com/problems/sort-array-by-increasing-frequency/">문제</a></p>

<h2 id="접근하기">접근하기</h2>

<p>숫자형 배열 <code class="language-plaintext highlighter-rouge">nums</code>가 주어진다. 각 원소들을 정렬하는데 다음과 같은 조건으로 정렬한다.</p>

<ol>
  <li>각 원소의 개수를 오름차순으로 정렬한다.</li>
  <li>만약 각 원소의 개수가 같다면, 값을 기준으로 내림차순 정렬한다.</li>
</ol>

<p><br /></p>

<h2 id="내-코드">내 코드</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">frequencySort</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">nums</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">let</span> <span class="nx">obj</span> <span class="o">=</span> <span class="p">{};</span>
  <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">nums</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">obj</span><span class="p">[</span><span class="nx">nums</span><span class="p">[</span><span class="nx">i</span><span class="p">]]</span> <span class="o">=</span> <span class="nx">obj</span><span class="p">[</span><span class="nx">nums</span><span class="p">[</span><span class="nx">i</span><span class="p">]]</span> <span class="p">?</span> <span class="nx">obj</span><span class="p">[</span><span class="nx">nums</span><span class="p">[</span><span class="nx">i</span><span class="p">]]</span> <span class="o">+</span> <span class="mi">1</span> <span class="p">:</span> <span class="mi">1</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nx">nums</span><span class="p">.</span><span class="nx">sort</span><span class="p">((</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">(</span><span class="nx">obj</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span> <span class="o">===</span> <span class="nx">obj</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span> <span class="p">?</span> <span class="nx">b</span> <span class="o">-</span> <span class="nx">a</span> <span class="p">:</span> <span class="nx">obj</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span> <span class="o">-</span> <span class="nx">obj</span><span class="p">[</span><span class="nx">b</span><span class="p">]));</span>
<span class="p">};</span>
</code></pre></div></div>

<ol>
  <li>배열에서 어떤 원소의 반복, 개수를 구하려면 해시구조를 사용하는 것이 편하다.</li>
  <li><code class="language-plaintext highlighter-rouge">nums</code>를 순회하면서, 값이 중복되면 +1을, 아니면 1을 대입해서 중복 개수를 구한다.</li>
  <li><code class="language-plaintext highlighter-rouge">nums</code>를 정렬하는데, <code class="language-plaintext highlighter-rouge">obj[a]</code>와 <code class="language-plaintext highlighter-rouge">obj[b]</code>가 같다면, 원소의 개수가 동일하기 때문에 <code class="language-plaintext highlighter-rouge">b - a</code>로 내림차순 하고, 같지 않다면 <code class="language-plaintext highlighter-rouge">obj[a] - obj[b]</code>로 개수를 기준으로 오름차순 정렬한다.</li>
</ol>
:ET