I".-<p><a href="https://leetcode.com/problems/relative-ranks/">문제</a></p>

<h2 id="접근하기">접근하기</h2>

<p>숫자형 배열 <code class="language-plaintext highlighter-rouge">score</code>가 주어진다. <code class="language-plaintext highlighter-rouge">score</code>의 수가 높은 순서대로, <code class="language-plaintext highlighter-rouge">"Gold Medal","Silver Medal","Bronze Medal","4","5"</code>를 순서에 맞게 반환한다.</p>

<p><br /></p>

<h2 id="내-코드">내 코드</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">findRelativeRanks</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">score</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="nx">gold</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">Gold Medal</span><span class="dl">'</span><span class="p">;</span>
  <span class="kd">const</span> <span class="nx">silver</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">Silver Medal</span><span class="dl">'</span><span class="p">;</span>
  <span class="kd">const</span> <span class="nx">bronze</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">Bronze Medal</span><span class="dl">'</span><span class="p">;</span>

  <span class="c1">// sorting</span>
  <span class="kd">const</span> <span class="nx">sortScore</span> <span class="o">=</span> <span class="p">[...</span><span class="nx">score</span><span class="p">].</span><span class="nx">sort</span><span class="p">((</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">b</span> <span class="o">-</span> <span class="nx">a</span><span class="p">);</span>
  <span class="kd">let</span> <span class="nx">obj</span> <span class="o">=</span> <span class="p">{};</span>
  <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">sortScore</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">obj</span><span class="p">[</span><span class="nx">sortScore</span><span class="p">[</span><span class="nx">i</span><span class="p">]]</span> <span class="o">=</span> <span class="nx">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">i</span> <span class="o">===</span> <span class="mi">0</span><span class="p">)</span> <span class="nx">obj</span><span class="p">[</span><span class="nx">sortScore</span><span class="p">[</span><span class="mi">0</span><span class="p">]]</span> <span class="o">=</span> <span class="nx">gold</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">i</span> <span class="o">===</span> <span class="mi">1</span><span class="p">)</span> <span class="nx">obj</span><span class="p">[</span><span class="nx">sortScore</span><span class="p">[</span><span class="mi">1</span><span class="p">]]</span> <span class="o">=</span> <span class="nx">silver</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">i</span> <span class="o">===</span> <span class="mi">2</span><span class="p">)</span> <span class="nx">obj</span><span class="p">[</span><span class="nx">sortScore</span><span class="p">[</span><span class="mi">2</span><span class="p">]]</span> <span class="o">=</span> <span class="nx">bronze</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="kd">const</span> <span class="nx">answer</span> <span class="o">=</span> <span class="p">[];</span>
  <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">score</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">for</span> <span class="p">(</span><span class="kd">const</span> <span class="p">[</span><span class="nx">key</span><span class="p">,</span> <span class="nx">value</span><span class="p">]</span> <span class="k">of</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">entries</span><span class="p">(</span><span class="nx">obj</span><span class="p">))</span> <span class="p">{</span>
      <span class="k">if</span> <span class="p">(</span><span class="nx">score</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">===</span> <span class="nb">Number</span><span class="p">(</span><span class="nx">key</span><span class="p">))</span> <span class="nx">answer</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nb">String</span><span class="p">(</span><span class="nx">value</span><span class="p">));</span>
    <span class="p">}</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nx">answer</span><span class="p">;</span>
<span class="p">};</span>
</code></pre></div></div>

<ol>
  <li><code class="language-plaintext highlighter-rouge">score</code>를 얕은 복사를 한 후 내림차순으로 정렬시킨다.</li>
  <li>복사한 배열 <code class="language-plaintext highlighter-rouge">sortScore</code>를 순회하면서, 0, 1, 2번 인덱스에는 메달 문자열을 넣고 그 외엔 숫자를 할당시킨다. 그리고 객체에 키와 값으로 저장하여 점수: 랭크 형식으로 만든다.</li>
  <li>이제 원본 <code class="language-plaintext highlighter-rouge">score</code>배열에 순서대로 매핑시켜 반환한다.</li>
</ol>

<p><br /></p>

<h2 id="참고-코드">참고 코드</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">findRelativeRanks</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">score</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="nx">gold</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">Gold Medal</span><span class="dl">'</span><span class="p">;</span>
  <span class="kd">const</span> <span class="nx">silver</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">Silver Medal</span><span class="dl">'</span><span class="p">;</span>
  <span class="kd">const</span> <span class="nx">bronze</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">Bronze Medal</span><span class="dl">'</span><span class="p">;</span>

  <span class="c1">// sorting</span>
  <span class="kd">const</span> <span class="nx">sortScore</span> <span class="o">=</span> <span class="p">[...</span><span class="nx">score</span><span class="p">].</span><span class="nx">sort</span><span class="p">((</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">b</span> <span class="o">-</span> <span class="nx">a</span><span class="p">);</span>
  <span class="kd">let</span> <span class="nx">obj</span> <span class="o">=</span> <span class="p">{};</span>
  <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">sortScore</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">obj</span><span class="p">[</span><span class="nx">sortScore</span><span class="p">[</span><span class="nx">i</span><span class="p">]]</span> <span class="o">=</span> <span class="nx">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">i</span> <span class="o">===</span> <span class="mi">0</span><span class="p">)</span> <span class="nx">obj</span><span class="p">[</span><span class="nx">sortScore</span><span class="p">[</span><span class="mi">0</span><span class="p">]]</span> <span class="o">=</span> <span class="nx">gold</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">i</span> <span class="o">===</span> <span class="mi">1</span><span class="p">)</span> <span class="nx">obj</span><span class="p">[</span><span class="nx">sortScore</span><span class="p">[</span><span class="mi">1</span><span class="p">]]</span> <span class="o">=</span> <span class="nx">silver</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">i</span> <span class="o">===</span> <span class="mi">2</span><span class="p">)</span> <span class="nx">obj</span><span class="p">[</span><span class="nx">sortScore</span><span class="p">[</span><span class="mi">2</span><span class="p">]]</span> <span class="o">=</span> <span class="nx">bronze</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">score</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">score</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">=</span> <span class="s2">`</span><span class="p">${</span><span class="nx">obj</span><span class="p">[</span><span class="nx">score</span><span class="p">[</span><span class="nx">i</span><span class="p">]]}</span><span class="s2">`</span><span class="p">;</span>
  <span class="p">}</span>

  <span class="k">return</span> <span class="nx">score</span><span class="p">;</span>
<span class="p">};</span>
</code></pre></div></div>

<ol>
  <li>내가 짠 코드는 이중for문으로 인해 속도가 매우 느리다.</li>
  <li>다른 코드를 참고하여 내 코드 중 이중for문을 제거하니 약 55배 가량 빨라졌다..(5120ms =&gt; <strong>92ms</strong>)</li>
  <li>원본 배열을 참고하여 순서에 맞게 반환할 때 굳이 이중for문을 쓰지 않고 원본 <code class="language-plaintext highlighter-rouge">score</code>배열을 순회하면서, <code class="language-plaintext highlighter-rouge">score</code>의 해당 값에 <code class="language-plaintext highlighter-rouge">obj</code>의 <code class="language-plaintext highlighter-rouge">score[i]</code> 수를 키로 삼아 해당 값을 할당하여 순서를 맞췄더니 속도가 굉장히 빨라졌다.</li>
</ol>
:ET