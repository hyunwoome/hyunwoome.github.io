I"^<p><a href="https://leetcode.com/problems/unique-email-addresses/">문제</a></p>

<h2 id="접근하기">접근하기</h2>

<p>문자열 배열 <code class="language-plaintext highlighter-rouge">emails</code>가 주어진다. <code class="language-plaintext highlighter-rouge">emails</code>를 주어진 조건을 통과 후 유니크한 문자열의 개수를 반환한다. <code class="language-plaintext highlighter-rouge">emails</code>의 원소인 이메일 주소는 <code class="language-plaintext highlighter-rouge">@</code>기점으로 왼쪽은 로컬네임, 오른쪽은 도메인네임이라 한다.</p>

<p>조건 1. 로컬네임에 <code class="language-plaintext highlighter-rouge">.</code>은 모두 무시된다. 도메인네임은 무시할 수 없다.
조건 2. 로컬네임에 <code class="language-plaintext highlighter-rouge">+</code>이후 모두 무시된다. 도메인네임은 무시할 수 없다.</p>

<p><br /></p>

<h2 id="참고-코드">참고 코드</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">numUniqueEmails</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">emails</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">function</span> <span class="nx">normalizeEmail</span><span class="p">(</span><span class="nx">email</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">let</span> <span class="p">[</span><span class="nx">local</span><span class="p">,</span> <span class="nx">domain</span><span class="p">]</span> <span class="o">=</span> <span class="nx">email</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="dl">'</span><span class="s1">@</span><span class="dl">'</span><span class="p">);</span>
    <span class="nx">local</span> <span class="o">=</span> <span class="nx">local</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/</span><span class="se">(\.)</span><span class="sr">|</span><span class="se">(\+</span><span class="sr">.*</span><span class="se">)</span><span class="sr">/g</span><span class="p">,</span> <span class="dl">''</span><span class="p">);</span>
    <span class="k">return</span> <span class="nx">local</span> <span class="o">+</span> <span class="dl">'</span><span class="s1">@</span><span class="dl">'</span> <span class="o">+</span> <span class="nx">domain</span><span class="p">;</span>
  <span class="p">}</span>

  <span class="kd">const</span> <span class="kd">set</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Set</span><span class="p">();</span>

  <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">email</span> <span class="k">of</span> <span class="nx">emails</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="nx">address</span> <span class="o">=</span> <span class="nx">normalizeEmail</span><span class="p">(</span><span class="nx">email</span><span class="p">);</span>
    <span class="kd">set</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">address</span><span class="p">);</span>
  <span class="p">}</span>

  <span class="k">return</span> <span class="kd">set</span><span class="p">.</span><span class="nx">size</span><span class="p">;</span>
<span class="p">};</span>
</code></pre></div></div>

<ol>
  <li>테스트케이스 129개중 128번째에 막혀서 코드를 참고했다.</li>
  <li>나는 로컬네임과 도메인네임의 유니크한 값을 구하고, 그 값들 중 큰 값을 반환했는데, 잘못생각했다. 조건을 통과한 로컬네임을 따로 보지않고 다시 도메인네임과 합치고 중복을 제거해야 한다.</li>
  <li><code class="language-plaintext highlighter-rouge">normalizeEmail()</code>함수는 <code class="language-plaintext highlighter-rouge">@</code>을 기점으로 <code class="language-plaintext highlighter-rouge">local</code>과 <code class="language-plaintext highlighter-rouge">domain</code>을 나눈다.</li>
  <li><code class="language-plaintext highlighter-rouge">local</code>은 정규표현식을 이용해 <code class="language-plaintext highlighter-rouge">.</code>을 제거하고 <code class="language-plaintext highlighter-rouge">+</code>이후의 문자열들을 모두 삭제한다.</li>
  <li><strong>반환할 때 <code class="language-plaintext highlighter-rouge">local</code>과 <code class="language-plaintext highlighter-rouge">domain</code>을 다시 합쳐서 원래의 이메일로 돌려놓는다.</strong></li>
  <li><code class="language-plaintext highlighter-rouge">Set</code>를 이용해서 중복을 가려내고, <code class="language-plaintext highlighter-rouge">size</code>를 반환한다.</li>
</ol>
:ET